import * as Types from './types';
export declare function hasVNodeChanged(nodeA: Types.ValidVNode, nodeB: Types.ValidVNode): boolean;
export declare function hasComponentChanged(newComponent: Types.ValidVNode, oldComponent: Types.ValidVNode): boolean;
export declare function isVNode(node: Types.ValidVNode): boolean;
export declare function isPresent(node: any): boolean;
export declare function isComponent(vNode: Types.ValidVNode): boolean;
export declare function getLargestArray<A, B>(a: A[], b: B[]): A[] | B[];
export declare function lifecycle(method: Types.ValidLifecycleMethods, vNode: Types.ValidVNode, $node?: HTMLElement): void;
export declare function shouldComponentRender(node: Types.ValidVNode): boolean;
export declare function shouldComponentUnmount(node: Types.ValidVNode): boolean;
